// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Process Compose Discord Channel",
            "url": "https://discord.gg/S4xgmRSHdC"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/live": {
            "get": {
                "description": "Check if server is responding",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Liveness"
                ],
                "summary": "Liveness Check",
                "operationId": "IsAlive",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/process": {
            "post": {
                "description": "Update porcess",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Process"
                ],
                "summary": "Updates process configuration",
                "operationId": "UpdateProcess",
                "responses": {
                    "200": {
                        "description": "Updated Process Config",
                        "schema": {
                            "$ref": "#/definitions/types.ProcessConfig"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/process/info/{name}": {
            "get": {
                "description": "Retrieves the given process and its config",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Process"
                ],
                "summary": "Get process config",
                "operationId": "GetProcessInfo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Process Name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.ProcessConfig"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/process/logs/{name}": {
            "delete": {
                "description": "Truncates the process logs",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Process"
                ],
                "summary": "Truncate process logs",
                "operationId": "TruncateProcessLogs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Process Name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Truncated Process Name",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/process/logs/{name}/{endOffset}/{limit}": {
            "get": {
                "description": "Retrieves the process logs",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Process"
                ],
                "summary": "Get process logs",
                "operationId": "GetProcessLogs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Process Name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Offset from the end of the log",
                        "name": "endOffset",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Limit of lines to get (0 will get all the lines till the end)",
                        "name": "limit",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Process Logs",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/process/ports/{name}": {
            "get": {
                "description": "Retrieves process open ports",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Process"
                ],
                "summary": "Get process ports",
                "operationId": "GetProcessPorts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Process Name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Process Ports",
                        "schema": {
                            "$ref": "#/definitions/types.ProcessPorts"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/process/restart/{name}": {
            "post": {
                "description": "Restarts the process",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Process"
                ],
                "summary": "Restart a process",
                "operationId": "RestartProcess",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Process Name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Restarted Process Name",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/process/scale/{name}/{scale}": {
            "patch": {
                "description": "Scale a process",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Process"
                ],
                "summary": "Scale a process to a given replicas count",
                "operationId": "ScaleProcess",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Process Name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "New amount of process replicas",
                        "name": "scale",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Scaled Process Name",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/process/start/{name}": {
            "post": {
                "description": "Starts the process if the state is not 'running' or 'pending'",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Process"
                ],
                "summary": "Start a process",
                "operationId": "StartProcess",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Process Name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Started Process Name",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/process/stop/{name}": {
            "patch": {
                "description": "Sends kill signal to the process",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Process"
                ],
                "summary": "Stop a process",
                "operationId": "StopProcess",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Process Name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Stopped Process Name",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/process/{name}": {
            "get": {
                "description": "Retrieves the given process and its status",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Process"
                ],
                "summary": "Get process state",
                "operationId": "GetProcess",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Process Name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.ProcessState"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/processes": {
            "get": {
                "description": "Retrieves all the configured processes and their status",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Process"
                ],
                "summary": "Get all processes",
                "operationId": "GetProcesses",
                "responses": {
                    "200": {
                        "description": "Processes Status",
                        "schema": {
                            "$ref": "#/definitions/types.ProcessesState"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/processes/stop": {
            "patch": {
                "description": "Sends kill signal to the processes list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Process"
                ],
                "summary": "Stop processes",
                "operationId": "StopProcesses",
                "parameters": [
                    {
                        "description": "Processes Names",
                        "name": "[]string",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Stopped Processes Names",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "207": {
                        "description": "Stopped Processes Names",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/project": {
            "post": {
                "description": "Update running project",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Updates running processes",
                "operationId": "UpdateProject",
                "responses": {
                    "200": {
                        "description": "Update Project Status",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "207": {
                        "description": "Update Project Status",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/project/configuration": {
            "post": {
                "description": "Reload project state from config",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Reload project",
                "operationId": "ReloadProject",
                "responses": {
                    "200": {
                        "description": "Update Project Status",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "207": {
                        "description": "Update Project Status",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/project/name": {
            "get": {
                "description": "Get process compose project name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ProjectName"
                ],
                "summary": "Get Project Name",
                "operationId": "GetProjectName",
                "responses": {
                    "200": {
                        "description": "ProjectName",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/project/state": {
            "get": {
                "description": "Retrieves project state information",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Get project state",
                "operationId": "GetProjectState",
                "responses": {
                    "200": {
                        "description": "Project State",
                        "schema": {
                            "$ref": "#/definitions/types.ProjectState"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/project/stop": {
            "post": {
                "description": "Shuts down the server",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Stops all the processes and the server",
                "operationId": "ShutDownProject",
                "responses": {
                    "200": {
                        "description": "Stopped Server",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "health.ExecProbe": {
            "type": "object",
            "properties": {
                "command": {
                    "type": "string"
                },
                "workingDir": {
                    "type": "string"
                }
            }
        },
        "health.HttpProbe": {
            "type": "object",
            "properties": {
                "host": {
                    "type": "string"
                },
                "numPort": {
                    "type": "integer"
                },
                "path": {
                    "type": "string"
                },
                "port": {
                    "type": "string"
                },
                "scheme": {
                    "type": "string"
                }
            }
        },
        "health.Probe": {
            "type": "object",
            "properties": {
                "exec": {
                    "$ref": "#/definitions/health.ExecProbe"
                },
                "failureThreshold": {
                    "type": "integer"
                },
                "httpGet": {
                    "$ref": "#/definitions/health.HttpProbe"
                },
                "initialDelay": {
                    "type": "integer"
                },
                "periodSeconds": {
                    "type": "integer"
                },
                "successThreshold": {
                    "type": "integer"
                },
                "timeoutSeconds": {
                    "type": "integer"
                }
            }
        },
        "types.DependsOnConfig": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/definitions/types.ProcessDependency"
            }
        },
        "types.LogRotationConfig": {
            "type": "object",
            "properties": {
                "compress": {
                    "description": "Compress determines if the rotated log files should be compressed\nusing gzip. The default is not to perform compression.",
                    "type": "boolean"
                },
                "directory": {
                    "description": "Directory to log to when filelogging is enabled",
                    "type": "string"
                },
                "filename": {
                    "description": "Filename is the name of the logfile which will be placed inside the directory",
                    "type": "string"
                },
                "maxAge": {
                    "description": "MaxAge the max age in days to keep a logfile",
                    "type": "integer"
                },
                "maxBackups": {
                    "description": "MaxBackups the max number of rolled files to keep",
                    "type": "integer"
                },
                "maxSize": {
                    "description": "MaxSize the max size in MB of the logfile before it's rolled",
                    "type": "integer"
                }
            }
        },
        "types.LoggerConfig": {
            "type": "object",
            "properties": {
                "addTimestamp": {
                    "description": "AddTimestamp adds timestamp to log",
                    "type": "boolean"
                },
                "disableJSON": {
                    "description": "DisableJSON disables log JSON formatting",
                    "type": "boolean"
                },
                "fieldsOrder": {
                    "description": "FieldsOrder is the order in which fields are logged",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "flushEachLine": {
                    "description": "FlushEachLine flushes the logger on each line",
                    "type": "boolean"
                },
                "noColor": {
                    "description": "NoColor disables coloring",
                    "type": "boolean"
                },
                "noMetadata": {
                    "description": "NoMetadata disables log metadata (process, replica)",
                    "type": "boolean"
                },
                "rotation": {
                    "description": "Rotation is the configuration for logging rotation",
                    "allOf": [
                        {
                            "$ref": "#/definitions/types.LogRotationConfig"
                        }
                    ]
                },
                "timestampFormat": {
                    "description": "TimestampFormat is the format of the timestamp",
                    "type": "string"
                }
            }
        },
        "types.MemoryState": {
            "type": "object",
            "properties": {
                "allocated": {
                    "type": "integer"
                },
                "gcCycles": {
                    "type": "integer"
                },
                "systemMemory": {
                    "type": "integer"
                },
                "totalAllocated": {
                    "type": "integer"
                }
            }
        },
        "types.ProcessConfig": {
            "type": "object",
            "properties": {
                "args": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "command": {
                    "type": "string"
                },
                "dependsOn": {
                    "$ref": "#/definitions/types.DependsOnConfig"
                },
                "description": {
                    "type": "string"
                },
                "disableAnsiColors": {
                    "type": "boolean"
                },
                "disableDotEnv": {
                    "type": "boolean"
                },
                "disabled": {
                    "type": "boolean"
                },
                "entrypoint": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "environment": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "executable": {
                    "type": "string"
                },
                "extensions": {
                    "type": "object",
                    "additionalProperties": true
                },
                "isDaemon": {
                    "type": "boolean"
                },
                "isDisabled": {
                    "type": "string"
                },
                "isElevated": {
                    "type": "boolean"
                },
                "isForeground": {
                    "type": "boolean"
                },
                "isTty": {
                    "type": "boolean"
                },
                "launchTimeout": {
                    "type": "integer"
                },
                "livenessProbe": {
                    "$ref": "#/definitions/health.Probe"
                },
                "logLocation": {
                    "type": "string"
                },
                "loggerConfig": {
                    "$ref": "#/definitions/types.LoggerConfig"
                },
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "originalConfig": {
                    "type": "string"
                },
                "readinessProbe": {
                    "$ref": "#/definitions/health.Probe"
                },
                "readyLogLine": {
                    "type": "string"
                },
                "replicaName": {
                    "type": "string"
                },
                "replicaNum": {
                    "type": "integer"
                },
                "replicas": {
                    "type": "integer"
                },
                "restartPolicy": {
                    "$ref": "#/definitions/types.RestartPolicyConfig"
                },
                "shutDownParams": {
                    "$ref": "#/definitions/types.ShutDownParams"
                },
                "vars": {
                    "$ref": "#/definitions/types.Vars"
                },
                "workingDir": {
                    "type": "string"
                }
            }
        },
        "types.ProcessDependency": {
            "type": "object",
            "properties": {
                "condition": {
                    "type": "string"
                },
                "extensions": {
                    "type": "object",
                    "additionalProperties": true
                }
            }
        },
        "types.ProcessPorts": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "tcp_ports": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "udp_ports": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "types.ProcessState": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer"
                },
                "cpu": {
                    "type": "number"
                },
                "exit_code": {
                    "type": "integer"
                },
                "has_ready_probe": {
                    "type": "boolean"
                },
                "is_elevated": {
                    "type": "boolean"
                },
                "is_ready": {
                    "type": "string"
                },
                "is_running": {
                    "type": "boolean"
                },
                "mem": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "password_provided": {
                    "type": "boolean"
                },
                "pid": {
                    "type": "integer"
                },
                "restarts": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "system_time": {
                    "type": "string"
                }
            }
        },
        "types.ProcessesState": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.ProcessState"
                    }
                }
            }
        },
        "types.ProjectState": {
            "type": "object",
            "properties": {
                "fileNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "memoryState": {
                    "$ref": "#/definitions/types.MemoryState"
                },
                "processNum": {
                    "type": "integer"
                },
                "projectName": {
                    "type": "string"
                },
                "runningProcessNum": {
                    "type": "integer"
                },
                "startTime": {
                    "type": "string"
                },
                "upTime": {
                    "type": "integer"
                },
                "userName": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "types.RestartPolicyConfig": {
            "type": "object",
            "properties": {
                "backoffSeconds": {
                    "type": "integer"
                },
                "exitOnEnd": {
                    "type": "boolean"
                },
                "exitOnSkipped": {
                    "type": "boolean"
                },
                "maxRestarts": {
                    "type": "integer"
                },
                "restart": {
                    "type": "string"
                }
            }
        },
        "types.ShutDownParams": {
            "type": "object",
            "properties": {
                "parentOnly": {
                    "type": "boolean"
                },
                "shutDownCommand": {
                    "type": "string"
                },
                "shutDownTimeout": {
                    "type": "integer"
                },
                "signal": {
                    "type": "integer"
                }
            }
        },
        "types.Vars": {
            "type": "object",
            "additionalProperties": {}
        }
    },
    "externalDocs": {
        "url": "https://f1bonacc1.github.io/process-compose/"
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Process Compose API",
	Description:      "This is a sample Process Compose server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
